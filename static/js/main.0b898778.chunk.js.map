{"version":3,"sources":["logo.svg","Rating.tsx","RatingControl.tsx","ratingControlTester.ts","App.tsx","index.tsx"],"names":["Rating","id","value","updateValue","useState","hoverAt","setHoverAt","className","InputLabel","shrink","style","marginTop","cursor","fontSize","map","i","fullStars","onMouseOver","onMouseOut","onClick","withJsonFormsControlProps","data","handleChange","path","newValue","rankWith","scopeEndsWith","useStyles","makeStyles","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","actionButton","marginRight","buttons","alignItems","demoform","margin","renderers","materialRenderers","tester","ratingControlTester","renderer","RatingControl","App","classes","setData","stringifiedData","useMemo","JSON","stringify","src","logo","alt","Grid","spacing","item","sm","Typography","variant","schema","cells","materialCells","onChange","errors","Button","navigator","clipboard","writeText","color","theme","createTheme","components","MuiFormControl","styleOverrides","root","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.0b898778.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { useState } from 'react';\nimport { InputLabel } from '@mui/material';\n\ninterface RatingProps {\n  id?: string;\n  value: number;\n  updateValue: (newValue: number) => void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({ id, value, updateValue }) => {\n  const [hoverAt, setHoverAt] = useState<number | null>(null);\n\n  return (\n    <div id='#/properties/rating' className='rating'>\n      <InputLabel shrink style={{ marginTop: '0.8em' }}>Rating</InputLabel>\n      <div style={{ cursor: 'pointer', fontSize: '18px' }}>\n        {[0, 1, 2, 3, 4].map((i) => {\n          const fullStars = hoverAt ?? value;\n\n          return (\n            <span\n              onMouseOver={() => setHoverAt(i + 1)}\n              onMouseOut={() => setHoverAt(null)}\n              onClick={() => updateValue(i + 1)}\n              key={`${id}_${i}`}\n            >\n              {i < fullStars ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    updateValue={(newValue: number) => handleChange(path, newValue)}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import { Fragment, useState, useMemo } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport logo from './logo.svg';\nimport './App.css';\nimport schema from './mass.schema.json';\n//import uischema from './uischema.json';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  actionButton: {\n\tmarginRight: '30px',\n    display: 'block !important',\n  },\n  buttons: {\n\tdisplay: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n});\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<any>();\n  const stringifiedData = useMemo(() => JSON.stringify(data, null, 2), [data]);\n\n  const clearData = () => {\n    setData({});\n  };\n  \n  const copyData = () => {\n\tnavigator.clipboard.writeText(JSON.stringify(data));\n  };\n\n  return (\n    <Fragment>\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <h1 className='App-title'>Welcome to the QPED-project's configurator</h1>\n          <p className='App-intro'>Easily configure our checkers for Quarterfall.</p>\n        </header>\n      </div>\n\n      <Grid\n        container\n        justifyContent={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n\t    <Grid item sm={6}>\n          <Typography variant={'h4'} className={classes.title}>\n            Configuration Editor\n          </Typography>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={schema}\n           //   uischema={uischema}\n              data={data}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setData(data)}\n            />\n          </div>\n        </Grid>\n        <Grid item sm={4}>\n          <Typography variant={'h4'} className={classes.title}>\n            Configuration Data\n          </Typography>\n          <div className={classes.dataContent}>\n            <pre id='boundData'>{stringifiedData}</pre>\n          </div>\n\t\t  <div className={classes.buttons}>\n\t\t\t<Button\n\t\t\t\tclassName={classes.actionButton}\n\t\t\t\tonClick={copyData}\n\t\t\t\tcolor='primary'\n\t\t\t\tvariant='contained'\n\t\t\t>\n\t\t\t\tCopy to clipboard\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tclassName={classes.actionButton}\n\t\t\t\tonClick={clearData}\n\t\t\t\tcolor='primary'\n\t\t\t\tvariant='contained'\n\t\t\t>\n\t\t\t\tClear data\n\t\t\t</Button>\n\t\t  </div>\n        </Grid>\n        \n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createTheme({\n  components: {\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          margin: '0.8em 0',\n        },\n      }\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}